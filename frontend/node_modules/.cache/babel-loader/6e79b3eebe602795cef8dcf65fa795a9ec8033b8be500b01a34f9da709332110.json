{"ast":null,"code":"var _jsxFileName = \"D:\\\\TARU\\\\project\\\\Language-Tutor\\\\frontend\\\\src\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './ChatBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBox() {\n  _s();\n  const [input, setInput] = useState('');\n  const [history, setHistory] = useState([]);\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const fetchHistory = async () => {\n    const res = await axios.get('http://localhost:5000/history');\n    setHistory(res.data.reverse());\n  };\n  useEffect(() => {\n    fetchHistory();\n  }, []);\n  const sendMessage = async (msg = input) => {\n    if (!msg.trim()) return;\n    try {\n      await axios.post('http://localhost:5000/chat', {\n        message: msg\n      });\n      setInput('');\n      fetchHistory();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const startListening = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech Recognition not supported!');\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onstart = () => setIsListening(true);\n    recognition.onend = () => setIsListening(false);\n    recognition.onerror = e => {\n      console.error(e);\n      setIsListening(false);\n    };\n    recognition.onresult = event => {\n      const spokenText = event.results[0][0].transcript;\n      sendMessage(spokenText);\n    };\n    recognition.start();\n    recognitionRef.current = recognition;\n  };\n  const clearHistory = async () => {\n    await axios.post('http://localhost:5000/clear-history');\n    fetchHistory();\n  };\n  const toggleTheme = () => {\n    document.body.classList.toggle('dark');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"utility-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearHistory,\n        children: \"\\uD83E\\uDDF9 Clear Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        children: \"\\uD83C\\uDF17 Toggle Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-history\",\n      children: history.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-msg\",\n          children: msg.user_input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-msg\",\n          children: [msg.bot_reply, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"corrected\",\n            children: [\"\\u270F\\uFE0F \", msg.feedback]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type or speak here...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mic-button ${isListening ? 'listening' : ''}`,\n        onClick: startListening,\n        children: [\"\\uD83C\\uDFA4 \", isListening ? 'Listening...' : 'Speak']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"OOn/ACciotU/48gzVG2Aj5JNtjc=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatBox","_s","input","setInput","history","setHistory","isListening","setIsListening","recognitionRef","fetchHistory","res","get","data","reverse","sendMessage","msg","trim","post","message","err","console","error","startListening","window","alert","recognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","onstart","onend","onerror","e","onresult","event","spokenText","results","transcript","start","current","clearHistory","toggleTheme","document","body","classList","toggle","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","i","user_input","bot_reply","feedback","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/TARU/project/Language-Tutor/frontend/src/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './ChatBox.css';\r\n\r\nfunction ChatBox() {\r\n  const [input, setInput] = useState('');\r\n  const [history, setHistory] = useState([]);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  const fetchHistory = async () => {\r\n    const res = await axios.get('http://localhost:5000/history');\r\n    setHistory(res.data.reverse());\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  }, []);\r\n\r\n  const sendMessage = async (msg = input) => {\r\n    if (!msg.trim()) return;\r\n    try {\r\n      await axios.post('http://localhost:5000/chat', { message: msg });\r\n      setInput('');\r\n      fetchHistory();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const startListening = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('Speech Recognition not supported!');\r\n      return;\r\n    }\r\n\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n\r\n    recognition.onstart = () => setIsListening(true);\r\n    recognition.onend = () => setIsListening(false);\r\n    recognition.onerror = (e) => {\r\n      console.error(e);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onresult = (event) => {\r\n      const spokenText = event.results[0][0].transcript;\r\n      sendMessage(spokenText);\r\n    };\r\n\r\n    recognition.start();\r\n    recognitionRef.current = recognition;\r\n  };\r\n\r\n  const clearHistory = async () => {\r\n    await axios.post('http://localhost:5000/clear-history');\r\n    fetchHistory();\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    document.body.classList.toggle('dark');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"utility-buttons\">\r\n        <button onClick={clearHistory}>üßπ Clear Chat</button>\r\n        <button onClick={toggleTheme}>üåó Toggle Theme</button>\r\n      </div>\r\n\r\n      <div className=\"chat-history\">\r\n        {history.map((msg, i) => (\r\n          <div key={i} className=\"chat-message\">\r\n            <div className=\"user-msg\">{msg.user_input}</div>\r\n            <div className=\"bot-msg\">\r\n              {msg.bot_reply}\r\n              <div className=\"corrected\">‚úèÔ∏è {msg.feedback}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type or speak here...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <button onClick={() => sendMessage()}>Send</button>\r\n        <button\r\n          className={`mic-button ${isListening ? 'listening' : ''}`}\r\n          onClick={startListening}\r\n        >\r\n          üé§ {isListening ? 'Listening...' : 'Speak'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}